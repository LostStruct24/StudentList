{"version":3,"sources":["components/Navbar/Navbar.js","components/Row/ReadOnlyRow.js","components/Row/EditableRow.js","components/StudentList/StudentsList.js","App.js","index.js"],"names":["Navbar","className","ReadOnlyRow","student","handleEditClick","handleDeleteClick","firstName","lastName","birthYear","identityNumber","gender","type","onClick","event","id","EditableRow","editFormData","handleEditFormChange","handleCancelClick","required","placeholder","name","value","onChange","StudentsList","useState","data","students","setStudents","addFormData","setAddFormData","setEditFormData","editStudentId","setEditStudentId","handleAddFormChange","preventDefault","fieldName","target","getAttribute","fieldValue","newFormData","formValues","studentId","newStudents","index","findIndex","splice","searchTerm","setSearchTerm","e","onSubmit","editedStudent","filter","toLowerCase","includes","map","Math","random","Date","getFullYear","window","alert","i","length","newStudent","nanoid","htmlFor","particlesOptions","particles","line_linked","color","number","density","enable","value_area","App","params","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6acb65fd.chunk.js","sourcesContent":["import React from 'react';\nimport './Navbar.css';\nimport { IoMdPersonAdd } from 'react-icons/io';\n\nexport const Navbar = () => {\n\n    return (\n        <div className='navbar'>\n            <h1 className='navbarTitle'>Student List</h1>\n            <div className='person'><IoMdPersonAdd /></div>\n        </div>\n    );\n}\n\nexport default Navbar;","import React from \"react\";\nimport './ReadOnlyRow.css';\n\nconst ReadOnlyRow = ({ student, handleEditClick, handleDeleteClick }) => {\n  return (\n    <tr>\n      <td>{student.firstName}</td>\n      <td>{student.lastName}</td>\n      <td>{student.birthYear}</td>\n      <td>{student.identityNumber}</td>\n      <td>{student.gender}</td>\n      <td>\n        <button\n          className='edit-btn'\n          type=\"button\"\n          onClick={(event) => handleEditClick(event, student)}\n        >\n          Edit\n        </button>\n        <button           \n          className='delete-btn'\n          type=\"button\" \n          onClick={() => handleDeleteClick(student.id)}\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default ReadOnlyRow;\n","import React from \"react\";\nimport \"./EditableRow.css\";\n\nconst EditableRow = ({\n  editFormData,\n  handleEditFormChange,\n  handleCancelClick,\n}) => {\n  return (\n    <tr>\n      <td>\n        <input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Firrst name\"\n          name=\"firstName\"\n          value={editFormData.firstName}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Last name\"\n          name=\"lastName\"\n          value={editFormData.lastName}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"number\"\n          required=\"required\"\n          placeholder=\"Birth year\"\n          name=\"birthYear\"\n          value={editFormData.birthYear}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"number\"\n          required=\"required\"\n          placeholder=\"ID number\"\n          name=\"identityNumber\"\n          value={editFormData.identityNumber}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          className=\"radio-input\"\n          placeholder=\"gender\"\n          type=\"text\"\n          required=\"required\"\n          name=\"gender\"\n          value={editFormData.gender}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <button className='save-btn' type=\"submit\">Save</button>\n        <button className='cancel-btn' type=\"button\" onClick={handleCancelClick}>\n          Cancel\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default EditableRow;\n","import React, { useState, Fragment } from \"react\";\nimport \"./StudentsList.css\";\nimport data from \"../../data.json\";\nimport ReadOnlyRow from \"../Row/ReadOnlyRow\";\nimport EditableRow from \"../Row/EditableRow\";\nimport { nanoid } from \"nanoid\";\n\nconst StudentsList = () => {\n  const [students, setStudents] = useState(data);\n\n  const [addFormData, setAddFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    birthYear: \"\",\n    identityNumber: \"\",\n    gender: \"\"\n  });\n\n  const [editFormData, setEditFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    birthYear: \"\",\n    identityNumber: \"\",\n    gender: \"\"\n  });\n\n  const [editStudentId, setEditStudentId] = useState(null);\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = (event) => {\n    event.preventDefault();\n\n    const currentYear = new Date().getFullYear();\n\n    if (currentYear - addFormData.birthYear <= 16) {\n      window.alert('You must be older than 16!');\n      return;\n    }\n\n    for (let i = 0; i < students.length; i++) {\n      if (addFormData.identityNumber === students[i].identityNumber) {\n        window.alert('Your ID is already on a list!');\n        return;\n      } \n    }\n\n    const newStudent = {\n      id: nanoid(),\n      firstName: addFormData.firstName,\n      lastName: addFormData.lastName,\n      birthYear: addFormData.birthYear,\n      identityNumber: addFormData.identityNumber,\n      gender: addFormData.gender,\n    };\n\n    const newStudents = [...students, newStudent];\n    setStudents(newStudents);\n  };\n\n  const handleEditFormSubmit = (event) => {\n    event.preventDefault();\n    \n    const editedStudent = {\n      id: editStudentId,\n      firstName: editFormData.firstName,\n      lastName: editFormData.lastName,\n      birthYear: editFormData.birthYear,\n      identityNumber: editFormData.identityNumber,\n      gender: editFormData.gender,\n    };\n\n    const newStudents = [...students];\n\n    const index = students.findIndex((student) => student.id === editStudentId);\n\n    newStudents[index] = editedStudent;\n\n    setStudents(newStudents);\n    setEditStudentId(null);\n  };\n\n  const handleEditClick = (event, student) => {\n    event.preventDefault();\n    setEditStudentId(student.id);\n\n    const formValues = {\n      firstName: student.firstName,\n      lastName: student.lastName,\n      birthYear: student.birthYear,\n      identityNumber: student.identityNumber,\n      gender: student.gender,\n    };\n\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditStudentId(null);\n  };\n\n  const handleDeleteClick = (studentId) => {\n    const newStudents = [...students];\n\n    const index = students.findIndex((student) => student.id === studentId);\n\n    newStudents.splice(index, 1);\n\n    setStudents(newStudents);\n  };\n\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  return (\n    <div className=\"container\">\n        <div className='searchBox'>\n            <input\n              className='searchBoxInput'\n              type=\"number\"\n              placeholder=\"Filter by ID number\"\n              onChange={(e) => \n                setSearchTerm(e.target.value)\n              }\n            />\n        </div>\n      <form onSubmit={handleEditFormSubmit}>\n        <table>\n          <thead>\n            <tr>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Birth Year</th>\n              <th>Identity Number</th>\n              <th>Gender</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {students.filter(value => {\n              if (searchTerm === '') {\n                return value;\n              } else if (\n                  value.identityNumber.toLowerCase().includes(searchTerm.toLowerCase())\n                ) {\n                  return value;\n                }\n              return false;\n            }).map((student) => (\n              <Fragment key={Math.random()}>\n                {editStudentId === student.id ? (\n                  <EditableRow\n                    editFormData={editFormData}\n                    handleEditFormChange={handleEditFormChange}\n                    handleCancelClick={handleCancelClick}\n                  />\n                ) : (\n                  <ReadOnlyRow\n                    student={student}\n                    handleEditClick={handleEditClick}\n                    handleDeleteClick={handleDeleteClick}\n                  />\n                )}\n              </Fragment>\n            ))}\n          </tbody>\n        </table>\n      </form>\n\n        <div className='formContainer'>\n          <div className='wrapper'>\n            <h2 className='wrapperTitle'>Add a Student</h2>\n            <form className='wrapperForm' onSubmit={handleAddFormSubmit}>\n              <div className='inputFields'>\n                First name:\n                <input\n                  type=\"text\"\n                  name=\"firstName\"\n                  required=\"required\"\n                  placeholder=\"First name\"\n                  onChange={handleAddFormChange}\n                />\n              </div>\n              <div className='inputFields'>\n                Last name:\n                <input\n                  type=\"text\"\n                  name=\"lastName\"\n                  required=\"required\"\n                  placeholder=\"Last name\"\n                  onChange={handleAddFormChange}\n                />            \n              </div>\n              <div className='inputFields'>\n                Birth Year:    \n                <input\n                  type=\"number\"\n                  name=\"birthYear\"\n                  required=\"required\"\n                  placeholder=\"Birth year\"\n                  onChange={handleAddFormChange}\n                />\n              </div>\n              <div className='inputFields'>\n                ID number:\n                <input\n                  type=\"number\"\n                  name=\"identityNumber\"\n                  required=\"required\"\n                  placeholder=\"ID number\"\n                  onChange={handleAddFormChange}\n                />\n              </div>\n              <div className='inputFields'>\n                <input\n                  type='radio'\n                  id='male'\n                  value='male'\n                  name='gender'\n                  required=\"required\"\n                  onChange={handleAddFormChange}\n                /> \n                  <label className='input-label' htmlFor=\"male\">Male</label>\n              </div>\n              <div className='inputFields'>\n                <input \n                  type='radio' \n                  id='female' \n                  value='female'\n                  name='gender'\n                  required=\"required\"\n                  onChange={handleAddFormChange}\n                />\n                  <label className='input-label' htmlFor=\"female\">Female</label>\n              </div>\n              <div className='inputFields'>\n                <button className='add-btn' type=\"submit\">Add</button>\n              </div>\n            </form> \n          </div>\n        </div>\n    </div>    \n  );\n};\n\nexport default StudentsList;\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport StudentsList from './components/StudentList/StudentsList';\nimport Particles from 'react-particles-js';\n\nconst particlesOptions = {\n  particles: {\n    line_linked: {\n      color: \"rgb(65, 65, 92)\"\n    },\n    number: {\n      value: 20,\n      density: {\n        enable: true,\n        value_area: 700\n      }\n    }\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <StudentsList />\n      <div className=\"particle\">\n        <Particles className='particles'\n            params={particlesOptions} \n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}